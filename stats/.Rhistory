bfloors*floors[i] + bcon*zcon[i]
}
b0 ~ dnorm(mean=0,sd=100)
blot ~ ddexp(0,var=.25)
bbaths ~ dnorm(mean=0,sd=100)
broof ~ ddexp(0,var=.25)
bgar ~ dnorm(mean=0,sd=100)
barea ~ dnorm(mean=0,sd=100)
bfloors ~ dnorm(mean=0,sd=100)
bcon ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
thirdConsts <- list(N=length(dat$price))
thirdData <- list(price=dat$price,lot=dat$lot,baths=dat$baths,zroof=zroof,gar=dat$gar,area=dat$area,floors=dat$floors,
zcon=zcon)
third.out <- nimbleMCMC(constants=thirdConsts,
data=thirdData,
code=thirdCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','blot','bbaths','broof','bgar','ss','barea','bfloors','bcon'))
third.out$summary
third.out$WAIC
thirdCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + blot*lot[i] + bbaths*baths[i] + broof*zroof[i] + bgar*gar[i] + barea*area[i]+
bfloors*floors[i] + bcon*zcon[i]
}
b0 ~ dnorm(mean=0,sd=100)
blot ~ ddexp(0,var=.25)
bbaths ~ dnorm(mean=0,sd=100)
broof ~ ddexp(0,var=.25)
bgar ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bfloors ~ dnorm(mean=0,sd=100)
bcon ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
thirdConsts <- list(N=length(dat$price))
thirdData <- list(price=dat$price,lot=dat$lot,baths=dat$baths,zroof=zroof,gar=dat$gar,area=dat$area,floors=dat$floors,
zcon=zcon)
third.out <- nimbleMCMC(constants=thirdConsts,
data=thirdData,
code=thirdCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','blot','bbaths','broof','bgar','ss','barea','bfloors','bcon'))
third.out$summary
third.out$WAIC
dat$lot
curve(dexp(x,0,var=0.25))
curve(dexp(x,0))
curve(dexp(x,0),xlim=c(-1,100))
curve(dexp(x,.25),xlim=c(-1,100))
curve(ddexp(x,0,var=.25),xlim=c(-1,100))
curve(ddexp(x,0),xlim=c(-1,100))
forthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bbaths ~ ddexp(0,var=.25)
bbasmt ~ ddexp(0,var=.25)
broof ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
forthConsts <- list(N=length(dat$price))
forthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
forth.out <- nimbleMCMC(constants=secondConsts,
data=secondData,
code=secondCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
forthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bbaths ~ ddexp(0,var=.25)
bbasmt ~ ddexp(0,var=.25)
broof ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
forthConsts <- list(N=length(dat$price))
forthData <- list(price=dat$price,barea=dat$area,baths=dat$baths,zroof=zroof,bbasmt=dat$basmt)
forth.out <- nimbleMCMC(constants=secondConsts,
data=secondData,
code=secondCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(nimble)
library(coda)
set.seed(1111)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/assessor.txt')
names(dat) <- c('price','lot','floors','con','roof','build','area','yr.built','eff.age','baths','gar','basmt')
zcon <- (dat$con-mean(dat$con))/sd(dat$con)
zroof <- (dat$roof-mean(dat$roof))/sd(dat$roof)
zbuild <- (dat$build-mean(dat$build))/sd(dat$build)
forthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bbaths ~ ddexp(0,var=.25)
bbasmt ~ ddexp(0,var=.25)
broof ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
forthConsts <- list(N=length(dat$price))
forthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
forth.out <- nimbleMCMC(constants=secondConsts,
data=secondData,
code=secondCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
forthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bbaths ~ ddexp(0,var=.25)
bbasmt ~ ddexp(0,var=.25)
broof ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
forthConsts <- list(N=length(dat$price))
forthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
forth.out <- nimbleMCMC(constants=forthConsts,
data=forthData,
code=forthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
forth.out$summary
forth.out$WAIC
fifthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ dunif(-300,300)
bbaths ~ dunif(-300,300)
bbasmt ~ ddunif(-300,300)
broof ~ dunif(-300,300)
ss ~ dgamma(shape=2,rate=0.3)
})
fifthConsts <- list(N=length(dat$price))
fifthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
fifth.out <- nimbleMCMC(constants=fifthConsts,
data=fifthData,
code=fifthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
fifthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ dunif(-100,300)
bbaths ~ dunif(-100,300)
bbasmt ~ ddunif(-100,300)
broof ~ dunif(-100,300)
ss ~ dgamma(shape=2,rate=0.3)
})
fifthConsts <- list(N=length(dat$price))
fifthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
fifth.out <- nimbleMCMC(constants=fifthConsts,
data=fifthData,
code=fifthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
fifthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ dunif(-100,100)
bbaths ~ dunif(-100,100)
bbasmt ~ ddunif(-100,100)
broof ~ dunif(-100,100)
ss ~ dgamma(shape=2,rate=0.3)
})
fifthConsts <- list(N=length(dat$price))
fifthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
fifth.out <- nimbleMCMC(constants=fifthConsts,
data=fifthData,
code=fifthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
fifthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddunif(-100,100)
bbaths ~ ddunif(-100,100)
bbasmt ~ dddunif(-100,100)
broof ~ ddunif(-100,100)
ss ~ dgamma(shape=2,rate=0.3)
})
fifthConsts <- list(N=length(dat$price))
fifthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
fifth.out <- nimbleMCMC(constants=fifthConsts,
data=fifthData,
code=fifthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/assessor.txt')
names(dat) <- c('price','lot','floors','con','roof','build','area','yr.built','eff.age','baths','gar','basmt')
zcon <- (dat$con-mean(dat$con))/sd(dat$con)
zroof <- (dat$roof-mean(dat$roof))/sd(dat$roof)
zbuild <- (dat$build-mean(dat$build))/sd(dat$build)
fifthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddunif(-100,100)
bbaths ~ ddunif(-100,100)
bbasmt ~ dddunif(-100,100)
broof ~ ddunif(-100,100)
ss ~ dgamma(shape=2,rate=0.3)
})
fifthConsts <- list(N=length(dat$price))
fifthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
fifth.out <- nimbleMCMC(constants=fifthConsts,
data=fifthData,
code=fifthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
fifthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ dnorm(mean=0,sd=100)
bbaths ~ dnorm(mean=0,sd=100)
bbasmt ~ dnorm(mean=0,sd=100)
broof ~ dnorm(mean=0,sd=100)
ss ~ dgamma(shape=2,rate=0.3)
})
fifthConsts <- list(N=length(dat$price))
fifthData <- list(price=dat$price,area=dat$area,baths=dat$baths,zroof=zroof,basmt=dat$basmt)
fifth.out <- nimbleMCMC(constants=fifthConsts,
data=fifthData,
code=fifthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
fifth.out$summary
fifth.out$WAIC
length(dat$price)
set.seed(0)
aa <- 1:length(dat$price)
trainset <- sample(aa,100)
traindata <- dat[trainset,]
testdata <- dat[-trainset,]
trainset
testdata
testdata
set.seed(0)
aa <- 1:length(dat$price)
trainset <- sample(aa,100)
traindata <- dat[trainset,]
testdata <- dat[-trainset,]
traindata$zcon <- (traindata$con-mean(traindata$con))/sd(traindata$con)
traindata$zroof <- (traindata$roof-mean(traindata$roof))/sd(traindata$roof)
traindata$zbuild <- (traindata$build-mean(traindata$build))/sd(traindata$build)
testdata$zcon <- (testdata$con-mean(testdata$con))/sd(testdata$con)
testdata$zroof <- (testdata$roof-mean(testdata$roof))/sd(testdata$roof)
testdata$zbuild <- (testdata$build-mean(testdata$build))/sd(testdata$build)
sixthCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + blot*lot[i] + bbaths*baths[i] + broof*zroof[i] + bgar*gar[i] + barea*area[i]+
bfloors*floors[i] + bcon*zcon[i]
}
b0 ~ dnorm(mean=0,sd=100)
blot ~ ddexp(0,var=.25)
bbaths ~ dnorm(mean=0,sd=100)
broof ~ ddexp(0,var=.25)
bgar ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bfloors ~ dnorm(mean=0,sd=100)
bcon ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
sixthConsts <- list(N=length(traindata$price))
sixthData <- list(price=traindata$price,lot=traindata$lot,baths=traindata$baths,zroof=traindata$zroof,gar=traindata$gar,area=traindata$area,floors=traindata$floors,zcon=traindata$zcon)
sixth.out <- nimbleMCMC(constants=sixthConsts,
data=sixthData,
code=sixthCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','blot','bbaths','broof','bgar','ss','barea','bfloors','bcon'))
sixth.out$summary
sixth.out$WAIC
seventhCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bbaths ~ ddexp(0,var=.25)
bbasmt ~ ddexp(0,var=.25)
broof ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
seventhConsts <- list(N=length(dat$price))
seventhData <- list(price=traindata$price,area=traindata$area,baths=traindata$baths,zroof=traindata$zroof,
basmt=traindata$basmt)
seventh.out <- nimbleMCMC(constants=seventhConsts,
data=seventhData,
code=seventhCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
seventhCode <- nimbleCode({
for(i in 1:N){
price[i] ~ dnorm(mu[i],ss)
mu[i] <- b0 + barea*area[i] + bbaths*baths[i] + broof*zroof[i] + bbasmt*basmt[i]
}
b0 ~ dnorm(mean=0,sd=100)
barea ~ ddexp(0,var=.25)
bbaths ~ ddexp(0,var=.25)
bbasmt ~ ddexp(0,var=.25)
broof ~ ddexp(0,var=.25)
ss ~ dgamma(shape=2,rate=0.3)
})
seventhConsts <- list(N=length(traindata$price))
seventhData <- list(price=traindata$price,area=traindata$area,baths=traindata$baths,zroof=traindata$zroof,
basmt=traindata$basmt)
seventh.out <- nimbleMCMC(constants=seventhConsts,
data=seventhData,
code=seventhCode,
niter = 8000, nburnin = 1000,
thin = 2, nchains = 4,
samplesAsCodaMCMC= TRUE,
summary = TRUE, WAIC = TRUE,
monitor = c('b0','barea','bbaths','broof','bbasmt','ss'))
seventh.out$summary
seventh.out$WAIC
extract(seventh.out, pars = c('barea','bbaths','broof','bbasmt')
)
seventh.out$summary$all.chains$barea
seventh.out$summary$all.chains
seventh.out$summary$all.chains[1,1]
seventh.out$summary$all.chains[1,2]
seventh.out$summary$all.chains[2,1]
seventh.out$summary$all.chains[5,1]
sixth.allsamps <- as.matrix(sixth.out$samples)
sixth.allsamps
sixth.allsamps[,1:3]
head(sixth.allsamps[,1:8])
sixth.allsamps <- as.matrix(sixth.out$samples)
sixth.allsamps <- sixth.allsamps[,1:6]
XtestFull <- cbind(1,testdata$area,testdata$baths,testdata$zcon,testdata$floors,
testdata$gar,testdata$lot,testdata$roof)
FullEsts <- XtestFull %*% t(sixth.allsamps)
XtestFull
head(sixth.allsamps)
sixth.allsamps <- as.matrix(sixth.out$samples)
head(sixth.allsamps)
sixth.allsamps <- as.matrix(sixth.out$samples)
sixth.allsamps <- sixth.allsamps[,1:8]
XtestFull <- cbind(1,testdata$area,testdata$baths,testdata$zcon,testdata$floors,
testdata$gar,testdata$lot,testdata$roof)
FullEsts <- XtestFull %*% t(sixth.allsamps)
FullPtEsts <- apply(FullEsts,1,mean)
FullPtEsts
apply(FullEsts,1,mean)
sum((testdata$price-FullPtEsts)^2)
testdata$price
median(abs(testdata$price-FullPtEsts))
seventh.allsamps <- as.matrix(seventh.out$samples)
head(seventh.allsamps)
seventh.allsamps <- as.matrix(seventh.out$samples)
seventh.allsamps <- seventh.allsamps[,1:5]
seventh.XtestFull <- cbind(1,testdata$area,testdata$basmt,testdata$bath,testdata$roof)
seventh.FullEsts <- seventh.XtestFull %*% t(seventh.allsamps)
seventh.FullPtEsts <- apply(seventh.FullEsts,1,mean)
sum((testdata$price-seventh.FullPtEsts)^2)
median(abs(testdata$price-seventh.FullPtEsts))
sixth.allsamps
head(sixth.allsamps)
sum((testdata$price-FullPtEsts)^2) > sum((testdata$price-seventh.FullPtEsts)^2)
median(abs(testdata$price-FullPtEsts)) > median(abs(testdata$price-seventh.FullPtEsts))
seventh.out$summary
seventh.out$WAIC
sixth.out$WAIC
library(tidyverse)
library(ggplot2)
###########################
### Loading in the data ###
###########################
### Setting the directory of the data ####
setwd('/Users/matty/Documents/BYU/undergrad_research/john')
### Loading in the data ###
curry <- read.csv('curry_t.csv')
kobe <- read.csv('kobe_t.csv')
lebron <- read.csv('lebron_t.csv')
malone <- read.csv('malone_t.csv')
michael <- read.csv('michael_t.csv')
pippin <- read.csv('pippin_t.csv')
stock <- read.csv('stock_t.csv')
curry_reg <- read.csv('curry_reg.csv')
curry_post <- read.csv('curry_post.csv')
kobe_reg <- read.csv('kobe_reg.csv')
kobe_post <- read.csv('kobe_post.csv')
lebron_reg <- read.csv('lebron_reg.csv')
lebron_post <- read.csv('lebron_post.csv')
malone_reg <- read.csv('malone_reg.csv')
malone_post <- read.csv('malone_post.csv')
michael_reg <- read.csv('michael_reg.csv')
michael_post <- read.csv('michael_post.csv')
pippin_reg <- read.csv('pippin_reg.csv')
pippin_post <- read.csv('pippin_post.csv')
stock_reg <- read.csv('stock_reg.csv')
stock_post <- read.csv('stock_post.csv')
### Cleaning the Data ###
curry_reg <- curry_reg$x
curry_post <- curry_post$x
kobe_reg <- kobe_reg$x
kobe_post <- kobe_post$x
lebron_reg <- lebron_reg$x
lebron_post <- lebron_post$x
malone_reg <- malone_reg$x
malone_post <- malone_post$x
michael_reg <- michael_reg$x
michael_post <- michael_post$x
pippin_reg <- pippin_reg$x
pippin_post <- pippin_post$x
stock_reg <- stock_reg$x
stock_post <- stock_post$x
### Setting directory of the file ###
setwd('/Users/matty/Documents/BYU/undergrad_research/stats')
dens_reg <- density(lebron_reg)
plot(dens_reg, xlab = expression('Game VORP - Team Mean Regular Season Adjusted VORP'), ylab = 'Density', main = '', ylim = c(0,0.09))
dens_post <- density(lebron_post)
lines(dens_post, col = 'red')
t.test(VORP ~ time, lebron)
t.test(VORP ~ time, curry)
dens_reg <- density(curry_reg)
plot(dens_reg, xlab = expression('Game VORP - Team Mean Regular Season Adjusted VORP'), ylab = 'Density', main = '', ylim = c(0,0.09))
dens_post <- density(curry_post)
lines(dens_post, col = 'red')
legend('topright', legend = c('reg', 'post'), col = c('black', 'red'), lty = 1)
dens_reg <- density(michael_reg)
plot(dens_reg, xlab = expression('Game VORP - Team Mean Regular Season Adjusted VORP'), ylab = 'Density', main = '', ylim = c(0,0.09))
dens_post <- density(michael_post)
lines(dens_post, col = 'red')
legend('topright', legend = c('reg', 'post'), col = c('black', 'red'), lty = 1)
length(michael_post)
hist(michael_reg)
hist(michael_post,col=rgb(1,0,0,alpha = 0.5))
hist(michael_reg)
hist(michael_post,col=rgb(1,0,0,alpha = 0.5),add=T)
