ggtitle("Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c("blue", "red"))
ggplot(data = data.frame(x = c(0, 1)), aes(colors('blue'))) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot() +
geom_line(data = df1, aes(x = x, y = y), color = "blue") +
geom_line(data = df2, aes(x = x, y = y), color = "red") +
ylab(expression(pi(theta)))+ xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196, colors('blue'))) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x, colors(distinct = TRUE))) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x), colors(distinct = TRUE)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x), colors(distinct = TRUE)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c("blue", "red"))
?stat_function
ggplot(data = data.frame(x = c(0, 1)), aes(x), colors(distinct = TRUE)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196), layer(colour = 'red')) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x), colors(distinct = TRUE)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196), layer(color = 'red')) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x), colors(distinct = TRUE)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196), fill = 'blue') +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x), colors(distinct = TRUE)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dbeta, args = list(shape1 = 67.5, shape2 = 1196)) +
stat_function(fun = dbeta, args = list(shape1 = 173.5, shape2 = 1530)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Posterior Distribution of the Proportion of Skipped Questions")
ggplot(df, aes(x = x)) +
geom_function(fun = function(x) dbeta(x, alpha.p.1, beta.p.1), color = "black", linetype = "solid", size = 2) +
geom_function(fun = function(x) dbeta(x, alpha.p.2, beta.p.2), color = "blue", linetype = "dashed", size = 2) +
labs(x = expression(theta), y = "Posterior density", title = "Posterior Prob. Dist. of Proportion of Skiiers") +
scale_color_manual(values = c("black", "blue")) +
theme(legend.position = "topright")
df <- data.frame(x = x_values)
df <- data.frame(x = x_values)
x_values <- seq(0, 0.3, by = 0.001)
df <- data.frame(x = x_values)
ggplot(df, aes(x = x)) +
geom_function(fun = function(x) dbeta(x, alpha.p.1, beta.p.1), color = "black", linetype = "solid", size = 2) +
geom_function(fun = function(x) dbeta(x, alpha.p.2, beta.p.2), color = "blue", linetype = "dashed", size = 2) +
labs(x = expression(theta), y = "Posterior density", title = "Posterior Prob. Dist. of Proportion of Skiiers") +
scale_color_manual(values = c("black", "blue")) +
theme(legend.position = "topright")
x_values <- seq(0, 1, by = 0.001)
df <- data.frame(x = x_values)
ggplot(df, aes(x = x)) +
geom_function(fun = function(x) dbeta(x, alpha.p.1, beta.p.1), color = "black", linetype = "solid", size = 2) +
geom_function(fun = function(x) dbeta(x, alpha.p.2, beta.p.2), color = "blue", linetype = "dashed", size = 2) +
labs(x = expression(theta), y = "Posterior density", title = "Posterior Prob. Dist. of Proportion of Skiiers") +
scale_color_manual(values = c("black", "blue")) +
theme(legend.position = "topright")
x_values <- seq(0, 1, by = 0.01)
df <- data.frame(x = x_values)
ggplot(df, aes(x = x)) +
geom_function(fun = function(x) dbeta(x, alpha.p.1, beta.p.1), color = "black", linetype = "solid", size = 2) +
geom_function(fun = function(x) dbeta(x, alpha.p.2, beta.p.2), color = "blue", linetype = "dashed", size = 2) +
labs(x = expression(theta), y = "Posterior density", title = "Posterior Prob. Dist. of Proportion of Skiiers") +
scale_color_manual(values = c("black", "blue")) +
theme(legend.position = "topright")
x_values <- seq(0, 1, by = 0.01)
df <- data.frame(x = x_values)
ggplot(df, aes(x = x)) +
geom_function(fun = function(x) dbeta(x, alpha.p.1, beta.p.1), color = "black") +
geom_function(fun = function(x) dbeta(x, alpha.p.2, beta.p.2), color = "blue") +
labs(x = expression(theta), y = "Posterior density", title = "Posterior Prob. Dist. of Proportion of Skiiers") +
scale_color_manual(values = c("black", "blue")) +
theme(legend.position = "topright")
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1) color = 'orange') +
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions", legend(colors())) +
scale_color_manual(values = c('orange','black'))
?legend
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions", legend('right') +
scale_color_manual(values = c('orange','black'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black')) +
legend('top')
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black')) +
legend('top',c('men','woman'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black')) +
labs(color = "Generation")
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dbeta(x,alpha.p.1, beta.p.1), color = 'orange') +
geom_function(fun = function(x) dbeta(x,alpha.p.2, beta.p.2), color = 'black') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('orange','black'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 3), color = 'purple') +
geom_function(fun = function(x) dgamma(x,9, 3), color = 'green') +
labs(x = expression(theta), title = "Posterior Distribution of the Proportion of Skipped Questions") +
scale_color_manual(values = c('purple','green'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 3), color = 'purple') +
geom_function(fun = function(x) dgamma(x,9, 3), color = 'green') +
labs(x = expression(theta), title = "Graph Change, but Same Shape") +
scale_color_manual(values = c('purple','green'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 3), color = 'purple') +
geom_function(fun = function(x) dgamma(x,30, 3), color = 'green') +
labs(x = expression(theta), title = "Graph Change, but Same Shape") +
scale_color_manual(values = c('purple','green'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 3), color = 'purple') +
geom_function(fun = function(x) dgamma(x,9, 3), color = 'green') +
labs(x = expression(theta), title = "Graph Change, but Same Shape") +
scale_color_manual(values = c('purple','green'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,3, 5), color = 'purple') +
geom_function(fun = function(x) dgamma(x,3, 9), color = 'green') +
labs(x = expression(theta), title = "Graph Change, but Same Shape") +
scale_color_manual(values = c('purple','green'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 3), color = 'purple') +
geom_function(fun = function(x) dgamma(x,9, 3), color = 'green') +
labs(x = expression(theta), title = "Graph Change, but Same Shape") +
scale_color_manual(values = c('purple','green'))
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Graph Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
qgamma(c(.025, .975), 2, 1.5)
pgamma(2,1.5)
pgamma(2,2,1.5)
pgamma(5,2,1.5) - pgamma(2,2,1.5)
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dgamma, args = list(shape1 = 0.5, shape2 = 3)) +
stat_function(fun = dgamma, args = list(shape1 = 0.5, shape2 = 3)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Prior Distribution of the Proportion of Skipped Questions")
library(ggplot2)
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
stat_function(fun = dgamma, args = list(shape1 = 0.5, shape2 = 3)) +
stat_function(fun = dgamma, args = list(shape1 = 0.5, shape2 = 3)) +
ylab(expression(pi(theta))) + xlab(expression(theta)) +
ggtitle("Prior Distribution of the Proportion of Skipped Questions")
ggplot(data = data.frame(x = c(0, 1)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
ggplot(data = data.frame(x, aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
f
ggplot(data = data.frame(x = c(0,1000000000), aes(x)) +
ggplot(data = data.frame(x = c(0,1000000000), aes(x)) +
ggplot(data = data.frame(x = c(0,1000000000), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
ggplot(data = data.frame(x = c(0, 100000000)), aes(x)) +
ggplot(data = data.frame(x = c(0, 100000000)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
ggplot(data = data.frame(x = c(0, 10000)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 8), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
geom_function(fun = function(x) dgamma(x,5, 1000), color = 'yellow') +
geom_function(fun = function(x) dgamma(x,5, 12), color = 'orange') +
labs(x = expression(theta), title = "Rate Change, but Same Shape") +
scale_color_manual(values = c('yellow','orange'))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "askpass", "blob", "boot", "broom", "bslib", "cachem", "car", "class", "cli", "codetools", "colorspace", "commonmark", "cpp11", "credentials", "curl", "data.table", "dbplyr", "digest", "dplyr", "dslabs", "DT", "dtplyr", "evaluate", "fansi", "fastmap", "flexmix", "forcats", "foreign", "fs", "gargle", "gert", "ggfortify", "ggplot2", "ggrepel", "gh", "glmnet", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "Lahman", "later", "lattice", "lavaan", "leaflet", "leaflet.providers", "lme4", "lubridate", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "minqa", "modelr", "nlme", "nnet", "onewaytests", "openssl", "pbkrtest", "pillar", "pkgload", "pls", "plyr", "prettyunits", "pROC", "processx", "promises", "ps", "purrr", "quantreg", "raster", "Rcpp", "readr", "readxl", "rematch", "rlang", "rmarkdown", "RMySQL", "rpart", "rstudioapi", "sass", "semmcci", "sp", "spatial", "stringi", "stringr", "survival", "sys", "terra", "testthat", "tibble", "tidyr", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "whisker", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(lookup)
install.packages('lookup')
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(ggplot2)
gamma <- 0.5
phi <- 0.5
exp_value <- gamma * phi
exp_value
gamma <- 0.5
phi <- 0.5
exp_value <- gamma / phi
exp_value
data <- c(3,3,7,1,4,6,6,7,3,1,5,5,5,3,3,0,3,1,2,2)
length(data)
data <- c(3,3,7,1,4,6,6,7,3,1,5,5,5,3,3,0,3,1,2,2)
n <- length(data)
gamma.p <- gamma + sum(data)
phi.p <- phi + n
gamma.p
phi.p
exp_value.p <- gamma.p / phi.p
exp_value.p
curve(dgamma(x, gamma.p, phi.p), xlim=c(0, 15), n=1000, xlab=expression(lambda), ylab="density", main=expression(paste("Distribution of ", lambda)))
curve(dgamma(x, gamma, phi), add=T, n=1000, lty=2)
qgamma(c(.025, .975), gamma.p, phi.p)
pgamma(4, gamma.p, phi.p, lower.tail=F)
curve(qgamma(c(.025, .975), gamma.p, phi.p))
lambda.p <- rgamma(10000, gamma.p, phi.p)
gamma.draw <- rgamma(10000, gamma, phi)
rpois(10000,gamma.draw)
gamma.draw <- rgamma(10000, gamma, phi)
mean(rpois(10000,gamma.draw))
data.d <- rgamma(10000, gamma, phi)
data.d <- rgamma(10000, gamma, phi)
n.d <- length(data.d)
gamma.d <- gamma + sum(data)
phi.d <- phi + n
pgamma(4, gamma.d, phi.d, lower.tail=F)
data.d <- rgamma(10000, gamma, phi)
n.d <- length(data.d)
gamma.d <- gamma + sum(data.d)
phi.d <- phi + n.d
pgamma(4, gamma.d, phi.d, lower.tail=F)
data.d <- rgamma(1000000, gamma.p, phi.p)
n.d <- length(data.d)
gamma.d <- gamma + sum(data.d)
phi.d <- phi + n.d
pgamma(4, gamma.d, phi.d, lower.tail=F)
data.d <- rgamma(1000000, gamma.p, phi.p)
n.d <- length(data.d)
gamma.d <- gamma.p + sum(data.d)
phi.d <- phi.p + n.d
pgamma(4, gamma.d, phi.d, lower.tail=F)
data.d <- rgamma(10000, gamma.p, phi.p)
n.d <- length(data.d)
gamma.d <- gamma.p + sum(data.d)
phi.d <- phi.p + n.d
pgamma(4, gamma.d, phi.d, lower.tail=F)
n.d
mean(data.d)
data.d
exp_value <- 8/1.5
var <- 8/(1.5^2)
exp_value
var
w.data <- c(12,9,10,8,9,4,10,15,3,5,11,8,9,4,2,7,9,5,4,2,3,12,10,2,9,8,13,9,7,6,6,2,2,6,8)
m.data <- c(2,3,0,4,1,1,12,2,2,0,3,2)
n.w <- length(w.data)
gamma.w <- 8 + sum(w.data)
phi.w <- 1.5 + n.w
gamma.w
phi.w
n.m <- length(m.data)
gamma.m <- 8 + sum(m.data)
phi.m <- 1.5 + n.m
gamma.m
phi.m
qgamma(c(.025, .975), gamma.w, phi.w)
qgamma(c(.025, .975), gamma.m, phi.m)
lambda.w <- rgamma(10000, gamma.w, phi.w)
lambda.m <- rgamma(10000, gamma.m, phi.m)
diff <- lambda.w - lambda.m
#Plot of the posterior on lambda_c - lambda_b
plot(density(diff), xlab=expression(lambda[w] - lambda[m]), ylab="density", main=expression(paste("Posterior Distribution of ", lambda[w]-lambda[m])), cex.axis=cex.plots, cex.lab=cex.plots, lwd=2)
lambda.w <- rgamma(10000, gamma.w, phi.w)
lambda.m <- rgamma(10000, gamma.m, phi.m)
diff <- lambda.w - lambda.m
cex.plots <- 1
plot(density(diff), xlab=expression(lambda[w] - lambda[m]), ylab="density", main=expression(paste("Posterior Distribution of ", lambda[w]-lambda[m])), cex.axis=cex.plots, cex.lab=cex.plots, lwd=2)
abline(v=0, lty=2)
lambda.w <- rgamma(10000, gamma.w, phi.w)
lambda.m <- rgamma(10000, gamma.m, phi.m)
diff <- lambda.w - lambda.m
mean(diff)
cex.plots <- 1
plot(density(diff), xlab=expression(lambda[w] - lambda[m]), ylab="density", main=expression(paste("Posterior Distribution of ", lambda[w]-lambda[m])), cex.axis=cex.plots, cex.lab=cex.plots, lwd=2)
abline(v=0, lty=2)
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(ggplot2)
set.seed(232323)
gamma <- 0.5
phi <- 0.5
exp_value <- gamma / phi
exp_value
data <- c(3,3,7,1,4,6,6,7,3,1,5,5,5,3,3,0,3,1,2,2)
n <- length(data)
gamma.p <- gamma + sum(data)
phi.p <- phi + n
gamma.p
phi.p
curve(dgamma(x, gamma.p, phi.p), xlim=c(0, 15), n=1000, xlab=expression(lambda), ylab="density", main=expression(paste("Distribution of ", lambda)))
curve(dgamma(x, gamma, phi), add=T, n=1000, lty=2)
exp_value.p <- gamma.p / phi.p
exp_value.p
qgamma(c(.025, .975), gamma.p, phi.p)
pgamma(4, gamma.p, phi.p, lower.tail=F)
exp_value <- 8/1.5
var <- 8/(1.5^2)
exp_value
var
w.data <- c(12,9,10,8,9,4,10,15,3,5,11,8,9,4,2,7,9,5,4,2,3,12,10,2,9,8,13,9,7,6,6,2,2,6,8)
m.data <- c(2,3,0,4,1,1,12,2,2,0,3,2)
n.w <- length(w.data)
gamma.w <- 8 + sum(w.data)
phi.w <- 1.5 + n.w
gamma.w
phi.w
n.m <- length(m.data)
gamma.m <- 8 + sum(m.data)
phi.m <- 1.5 + n.m
gamma.m
phi.m
qgamma(c(.025, .975), gamma.w, phi.w)
qgamma(c(.025, .975), gamma.m, phi.m)
lambda.w <- rgamma(10000, gamma.w, phi.w)
lambda.m <- rgamma(10000, gamma.m, phi.m)
diff <- lambda.w - lambda.m
mean(diff)
cex.plots <- 1
plot(density(diff), xlab=expression(lambda[w] - lambda[m]), ylab="density", main=expression(paste("Posterior Distribution of ", lambda[w]-lambda[m])), cex.axis=cex.plots, cex.lab=cex.plots, lwd=2)
abline(v=0, lty=2)
data.d <- rgamma(10000, gamma.p, phi.p)
rpois(10000,data.d)
data.d <- rgamma(10000, gamma.p, phi.p)
mean(rpois(10000,data.d) > 4)
setwd('/Users/matty/Documents/BYU/undergrad_research/stats')
setwd('/Users/matty/Documents/BYU/undergrad_research/merging')
playoffstats1 <- read.csv('playoffstats1.csv')
playoffstats2 <- read.csv('playoffstats2.csv')
regularstats1 <- read.csv('regularstats1.csv')
regularstats4 <- read.csv('regularstats4.csv')
library(tidyverse)
for(i in 1:nrow(regularstats1)){
if(regularstats1$player[i] %in% playoffstats1$player){
regularstats1$playslater <- TRUE
}
else if(regularstats1$player[i] %in% playoffstats2$player){
regularstats1$playslater <- TRUE
}
else{
regularstats1$playslater <- FALSE
}
}
print('regularstats1 done')
library(tidyverse)
library(ggplot2)
setwd('/Users/matty/Documents/BYU/undergrad_research/stats')
data <- read.csv('data.csv')
view(data)
data <- drop_na(data)
view(data)
view(data)
summary(lm(data$post~data$reg))
summary(lm(data$reg~data$post))
mean(data$reg<data$post,na.rm = T)
plot(data$reg,data$post)
??plot
?plot
plot(data$reg,data$post,type = l)
?plot
line(data$reg,data$post)
plot(data$reg,data$post,panel.first = lines)
plot(data$reg,data$post,panel.first = lines(data$reg,data$post))
?plot
summary(lm(data$post~data$reg))
summary(lm(data$reg~data$post))
mean(data$reg<data$post,na.rm = T)
plot(data$reg,data$post)
ggplot(data)+
geom_point(aes(x = reg, y = post))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_line(aes(x = reg, y = post))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_segment(aes(x = reg, y = post))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_hline(yintercept = mean(reg), color="blue")
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_hline(aes(x = mean(reg)))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_hline(aes(x = mean(reg)))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_hline(aes(yintercept = mean(data$reg)))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post)) +
geom_hline(aes(xintercept = mean(data$reg), yintercept = mean(data$post)))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post))
plot(data$reg,data$post)
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post))
summary(lm(data$post~data$reg))
summary(lm(data$reg~data$post))
mean(data$reg<data$post,na.rm = T)
plot(data$reg,data$post)
plot(data$reg,data$post)
lines(data$reg, data$post, type='l')
lines(data$reg, data$post)
lines(mean(data$reg), mean(data$post))
plot(data$reg,data$post)
lines(mean(data$reg), mean(data$post), type='l')
line(mean(data$reg), mean(data$post), type='l')
line(mean(data$reg), mean(data$post))
ggplot(data)+
geom_point(aes(x = reg, y = post)) +
geom_smooth(aes(x = reg, y = post))
?geom_smooth
plot(data$reg,data$post)
abline(0,1)
