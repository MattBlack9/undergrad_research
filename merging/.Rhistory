sigma2.use <- sigma2.save[-(1:burn)]
plot(alpha.use, type='l')
plot(beta.use, type='l')
plot(sigma2.use,type='l')
lambda <- alpha.use*exp(beta.use*24)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data )"),col='black')
quantile(lambda, c(.025, .975))
mu.dot <- rnorm(Iters,lambda,sqrt(tau2))
plot(density(mu.dot), xlab=expression(X[i]), ylab="Density", main=expression(pi~"("~X[i]~"| data )"),col='black',xlim=c(0,30000))
quantile(mu.dot, c(.025, .975))
dnorm(x1,alpha*exp(beta*t),sigma2,log=TRUE)
dgamma(beta,bgamma,bphi,log=TRUE)
lambda <- alpha.use*exp(beta.use*24)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data )"),col='black')
quantile(lambda, c(.025, .975))
lambda <- alpha.use*exp(beta.use*24)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, t[i] = 24)"),col='black')
quantile(lambda, c(.025, .975))
lambda <- alpha.use*exp(beta.use*24)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, t"[i]" = 24)"),col='black')
lambda <- alpha.use*exp(beta.use*24)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, t"~[i]~" = 24)"),col='black')
lambda <- alpha.use*exp(beta.use*24)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(lambda, c(.025, .975))
mu.dot <- rnorm(Iters,lambda,sqrt(tau2))
plot(density(mu.dot), xlab=expression(X[i]), ylab="Density", main=expression(pi~"("~X[i]~"| data, "~t[i]~" = 24)"),col='black',xlim=c(0,30000))
quantile(mu.dot, c(.025, .975))
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
mu.dot <- rnorm(Iters,lambda,sqrt(sigma2.use))
plot(density(mu.dot), xlab=expression(X[i]), ylab="Density", main=expression(pi~"("~X[i]~"| data, "~t[i]~" = 24)"),col='black',xlim=c(0,30000))
quantile(mu.dot, c(.025, .975))
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum((rnorm(1,mean(lambda),sd(lambda)) - lambda)^2))
mu.dot <- rnorm(Iters,lambda,sqrt(sigma2.use))
plot(density(mu.dot), xlab=expression(X[i]), ylab="Density", main=expression(pi~"("~X[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(mu.dot, c(.025, .975))
lambda <- alpha.use*exp(beta.use*24)
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(lambda, c(.025, .975))
sqrt(sigma2)
2.01+length(sigma2.use)
sigma2.use
0.5(sum(sigma.2use - lambda))
0.5(sum(sigma2.use - lambda))
0.5*(sum(sigma2.use - lambda))
sqrt(0.5*(sum(sigma2.use - lambda)))
sqrt(-0.5*(sum(sigma2.use - lambda)))
rinvgamma(1,9000,6039.712)
sqrt(-0.5*(sum(sigma2.use - lambda)*2))
sqrt(0.5*(sum(sigma2.use - lambda)*2))
sqrt(0.5*(sum(sigma2.use - lambda)^2))
mean(lambda)
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum(mean(lambda) - lambda)^2))
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum(mean(lambda) - lambda)^2)
mu.dot <- rnorm(Iters,lambda,sqrt(tau2))
plot(density(mu.dot), xlab=expression(X[i]), ylab="Density", main=expression(pi~"("~X[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(mu.dot, c(.025, .975))
lambda <- alpha.use*exp(beta.use*24)
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(lambda, c(.025, .975))
rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum(mean(lambda) - lambda)^2)
0.5*sum(mean(lambda) - lambda)^2
rnorm(Iters,lambda,sqrt(tau2))
sqrt(tau2)
lambda <- alpha.use*exp(beta.use*24)
plot(density(lambda), xlab=expression(mu[i]), ylab="Density", main=expression(pi~"("~mu[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(lambda, c(.025, .975))
tau2 <- rinvgamma(Iters,2.01 + 1/2, 0.005 + 0.5*sum(mean(lambda) - lambda)^2)
mu.dot <- rnorm(Iters,lambda,sqrt(tau2))
plot(density(mu.dot), xlab=expression(X[i]), ylab="Density", main=expression(pi~"("~X[i]~"| data, "~t[i]~" = 24)"),col='black')
quantile(mu.dot, c(.025, .975))
testing <- exp(beta.use*24)
test.dot <- rnorm(Iters,testing,2000)
plot(density(test.dot))
test.dot <- rnorm(Iters,testing,sqrt(2000))
plot(density(test.dot))
(1/6)^6
(1/6)^6 * 6
rep(1:6,1)
sample(rep(1:6,1))
sample(rep(1:6))
sample(rep(1:6),1)
sample(rep(1:6),1)
roll <- function(){
d1 <- sample(rep(1:6),1)
d2 <- sample(rep(1:6),1)
d3 <- sample(rep(1:6),1)
d4 <- sample(rep(1:6),1)
d5 <- sample(rep(1:6),1)
d6 <- sample(rep(1:6),1)
if(d1==d2){
if(d1==d3){
if(d1==d4){
if(d1==d5){
if(d1==d6){
print("It is done my lord")
}
}
}
}
}
else{
roll()
}
}
roll()
roll()
roll <- function(){
d1 <- sample(rep(1:6),1)
d2 <- sample(rep(1:6),1)
d3 <- sample(rep(1:6),1)
d4 <- sample(rep(1:6),1)
d5 <- sample(rep(1:6),1)
d6 <- sample(rep(1:6),1)
if(d1==d2){
if(d1==d3){
if(d1==d4){
if(d1==d5){
if(d1==d6){
return(TRUE)
}
else{
return(FALSE)
}
}
else{
return(FALSE)
}
}
else{
return(FALSE)
}
}
else{
return(FALSE)
}
}
else{
return(FALSE)
}
}
for(i in 100000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
}
}
for(i in 100000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
}
}
for(i in 100000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
}
}
for(i in 100000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
}
print(i)
}
roll()
roll()
roll()
roll()
d1 <- sample(rep(1:6),1)
d1
d2 <- sample(rep(1:6),1)
d2
d3 <- sample(rep(1:6),1)
d3
d4 <- sample(rep(1:6),1)
d4
for(i in 100000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10000000000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 10){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
print(i)
}
for(i in 1:10){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
print(i)
}
for(i in 1:10){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 1:100000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
for(i in 1:100000000){
test <- F
test <- roll()
if(test == T){
print("YAHTZEE")
print(i)
break
}
}
install.packages("coda")
install.packages("stan")
install.packages('nimble')
install.packages('stan')
install.packages('rstan')
library(tidyverse)
library(ggplot2)
###########################
### Loading in the data ###
###########################
### Setting the directory of the data ####
setwd('/Users/matty/Documents/BYU/undergrad_research/merging')
### Loading in the data ###
bulls <- read.csv('bulls.csv')
celtics <- read.csv('celtics.csv')
jazz <- read.csv('jazz.csv')
rockets <- read.csv('rockets.csv')
warriors <- read.csv('warriors.csv')
caveliers <- read.csv('caveliers.csv')
heat <- read.csv('heat.csv')
lakers <- read.csv('lakers.csv')
pistons <- read.csv('pistons.csv')
spurs <- read.csv('spurs.csv')
### Setting directory of the file ###
setwd('/Users/matty/Documents/BYU/undergrad_research/stats')
filter(bulls,player=='jordami01')
temp <- filter(bulls,player=='jordami01')
temp$DVORP > 0
sum(temp$DVORP > 0) == length(temp$DVORP)
temp <- filter(bulls,player=='kerrst01')
sum(temp$DVORP > 0) == length(temp$DVORP)
temp
sum(temp$DVORP < 0) == length(temp$DVORP)
temp <- filter(bulls,player=='pippisc01')
sum(temp$DVORP > 0) == length(temp$DVORP)
temp
temp
temp <- filter(bulls,player=='pippesc01')
sum(temp$DVORP > 0) == length(temp$DVORP)
library(tidyverse)
library(ggplot2)
###########################
### Loading in the data ###
###########################
### Setting the directory of the data ####
setwd('/Users/matty/Documents/BYU/undergrad_research/merging')
### Loading in the data ###
bulls <- read.csv('bulls.csv')
celtics <- read.csv('celtics.csv')
jazz <- read.csv('jazz.csv')
rockets <- read.csv('rockets.csv')
warriors <- read.csv('warriors.csv')
caveliers <- read.csv('caveliers.csv')
heat <- read.csv('heat.csv')
lakers <- read.csv('lakers.csv')
pistons <- read.csv('pistons.csv')
spurs <- read.csv('spurs.csv')
###########################
### Editing Data Frames ###
###########################
### Function for calculating the difference in VORP ###
difference <- function(df){
for(i in 1:nrow(df)){
df[i,7] <- diff(c(df[i,4],df[i,5]))
}
temp <- df[,-1]
names(temp) <- c('player','year','RVORP','PVORP','win','DVORP')
return(temp)
}
bulls <- difference(bulls)
celtics <- difference(celtics)
jazz <- difference(jazz)
rockets <- difference(rockets)
warriors <- difference(warriors)
caveliers <- difference(caveliers)
heat <- difference(heat)
lakers <- difference(lakers)
pistons <- difference(pistons)
spurs <- difference(spurs)
spurs
temp <- filter(bulls,player=='pippesc01')
sum(temp$DVORP > 0) == length(temp$DVORP)
for(i in unique(bulls$player)){
print(i)
}
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
print(better)
}
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
print(better)
print(i)
}
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
print(c(i,better))
}
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
print(i,better)
}
}
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
print(c(i,better))
}
}
playoffers <- c()
playoffers
playoffers <- data.frame()
playoffers
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
cbind(playoffers,i,'bulls')
}
}
playoffers <- data.frame()
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
please <- data.frame(player = i, team = 'bulls')
cbind(playoffers,please)
}
}
playoffers <- data.frame(player,team)
playoffers <- data.frame(player,team)
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
please <- data.frame(player = i, team = 'bulls')
rbind(playoffers,please)
}
}
playoffers
playoffers <- data.frame()
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
please <- data.frame(player = i, team = 'bulls')
rbind(playoffers,please)
}
}
playoffers
data.frame(player = i, team = 'bulls')
please
rbind(playoffers,please)
for(i in unique(bulls$player)){
temp <- filter(bulls,player==i)
better <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(better == TRUE){
please <- data.frame(player = i, team = 'bulls')
playoffers <- rbind(playoffers,please)
}
}
playoffers
string(bulls)
toString(bulls)
playoffers <- data.frame()
clutchers <- function(df,teamer,final){
for(i in unique(df$player)){
temp <- filter(df,player==i)
test <- sum(temp$DVORP > 0) == length(temp$DVORP)
if(test == TRUE){
adder <- data.frame(player = i, team = teamer)
final <- rbind(final,adder)
}
}
return(final)
}
clutchers(bulls,'bulls',playoffers)
clutchers(spurs,'spurs',playoffers)
spurs
