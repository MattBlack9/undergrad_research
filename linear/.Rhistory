nchains=3,niter=2200, thin = 200,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
raftery.diag(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
dat
read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=TRUE)
read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
hr
dat
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=FALSE)
hr <- dat$h
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
dat
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=FALSE)
hr <- dat$V1
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=2,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
hrData
hr
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=FALSE)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
hr
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=FALSE)
hr <- dat$V1
hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=2,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=3,niter=2200, thin = 200,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dunif(0,10)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=5,niter=10000, thin = 1000,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
plot(ss,type=’l’)
plot(ss,type='l')
ss <- allsamps[,2]
plot(ss,type='l')
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dunif(0,10)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=5,niter=10000, burnin = 1000,
thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dunif(0,10)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=5,niter=10000, nburnin = 1000,
thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
ss <- allsamps[,2]
plot(ss,type='l')
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, thin = 1, nburnin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=2,niter=55, thin = 1, nburnin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=3,niter=2200, nburnin = 200, thin = 1,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr1.dat',header=FALSE)
hr <- dat$V1
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dgamma(1.1,.1)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=1,niter=55, nburnin = 5, thin = 1,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dunif(0,200)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=5,niter=10000, nburnin = 1000,
thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
ss <- allsamps[,2]
plot(ss,type='l')
hr.out$WAIC
hr.out$summary
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dunif(0,10)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=5,niter=10000, nburnin = 1000,
thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
temp <- hr.out$summary
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
ss <- allsamps[,2]
plot(ss,type='l')
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/hr.dat',header=TRUE)
hr <- dat$hr
N <- length(hr)
hrCode <- nimbleCode({
for (i in 1:N){
hr[i] ~ dnorm(m,sd=ss)
}
ss ~ dunif(0,200)
m ~ dnorm(70,10)
})
hrData <- list(hr=hr)
hrConsts <- list(N=N)
hr.out <- nimbleMCMC(code=hrCode,
constants=hrConsts,
data=hrData,
nchains=5,niter=10000, nburnin = 1000,
thin = 5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('m','ss'))
gelman.diag(hr.out$samples)
allsamps <- as.matrix(hr.out$samples)
raftery.diag(allsamps)
effectiveSize(hr.out$samples)
ss <- allsamps[,2]
temp
hr.out$summary
hr.out$summary$all.chains
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(nimble)
library(coda)
set.seed(1111)
dat
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/exercises3.dat',header=TRUE)
dat
dat <- read.table('/Users/matty/Documents/BYU/STAT 451/exercises3.dat',header=TRUE)
mapCode <- nimbleCode({
for (i in n1:n){
y[i] ~ dnorm(mu[tmt[i]],sd=s[tmt[i]])
}
for (j in n1:n2){
mu[j]~ dnorm(120,sd=20)
s[j] ~ dgamma(1.1,.1)
}
})
mapConsts <- list(n=30,n1=1,n2=2,tmt=dat$X1)
mapData <- list(y=dat$X121)
dat.out <- nimbleMCMC(code=mapCode,
constants=mapConsts,
data=mapData,
nchains=4,niter=16000,nburnin=1000,
thin=5,
samplesAsCodaMCMC = TRUE,
summary=TRUE, WAIC=TRUE,
monitors=c('mu','s'))
names(dat.out)
dat.out$summary
dat.out$summary
gelman.diag(dat.out$samples)
allsamps <- as.matrix(dat.out$samples)
dim(allsamps)
mu1 <- allsamps[,1]
mu2 <- allsamps[,2]
sd1 <- allsamps[,3]
sd2 <- allsamps[,4]
raftery.diag(allsamps)
effectiveSize(allsamps)
plot(density(mu1,adjust=2))
plot(mu1,type='l')
gelman.diag(dat.out$samples)
allsamps <- as.matrix(dat.out$samples)
dim(allsamps)
mu1 <- allsamps[,1]
mu2 <- allsamps[,2]
sd1 <- allsamps[,3]
sd2 <- allsamps[,4]
raftery.diag(allsamps)
effectiveSize(allsamps)
plot(density(mu1,adjust=2))
plot(mu1,type='l')
plot(mu2,type='l')
gelman.diag(dat.out$samples)
allsamps <- as.matrix(dat.out$samples)
dim(allsamps)
mu1 <- allsamps[,1]
mu2 <- allsamps[,2]
sd1 <- allsamps[,3]
sd2 <- allsamps[,4]
raftery.diag(allsamps)
effectiveSize(allsamps)
plot(density(mu1,adjust=2))
plot(mu1,type='l')
plot(mu2,type='l')
dat.out$summary
effectiveSize(allsamps)
raftery.diag(allsamps)
gelman.diag(dat.out$samples)
gelman.diag(dat.out$samples)
allsamps <- as.matrix(dat.out$samples)
dim(allsamps)
mu1 <- allsamps[,1]
mu2 <- allsamps[,2]
sd1 <- allsamps[,3]
sd2 <- allsamps[,4]
raftery.diag(allsamps)
effectiveSize(allsamps)
plot(density(mu1,adjust=2))
plot(mu1,type='l')
plot(mu2,type='l')
library(tidyverse)
johnnyboy <- read.csv('/Users/matty/Documents/BYU/undergrad_research/john/johnnyboy.csv')
setwd('/Users/matty/Documents/BYU/undergrad_research/linear/')
mean(johnnyboy$VORP)
plot(johnnyboy$VORP)
curve(mean(johnnyboy$VORP), add= T)
plot(my_data$johnnyboy, my_data$vorp, xlab = "Johnnyboy", ylab = "VORP", main = "Scatterplot with Mean Line")
# Add points
points(my_data$vorp, col = "blue")
plot(johnnyboy, main = "Scatterplot with Mean Line", xlab = "X", ylab = "Y")
plot(johnnyboy$VORP, main = "Scatterplot with Mean Line", xlab = "X", ylab = "Y")
# Add mean line
abline(h = mean_values["Y"], col = "red") # Horizontal line at mean Y
abline(v = mean_values["X"], col = "green") # Vertical line at mean X
# Add mean line
abline(h = mean(johnnyboy$VORP)
# Add mean line
abline(h = mean(johnnyboy$VORP))
# Add mean line
abline(h = mean(johnnyboy$VORP))
